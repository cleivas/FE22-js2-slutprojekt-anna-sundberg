{"mappings":"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","sources":["src/modules/firebase.ts","src/modules/profile.ts","src/modules/gui.ts"],"sourcesContent":["export const url = \"https://js2-social-default-rtdb.europe-west1.firebasedatabase.app/users\";\nconst currentUser = localStorage.getItem('user');\n\nexport type firebaseUser = {\n    username: string,\n    avatar: string,\n    password: string,\n    posts: postObject\n}\n\nexport type postObject = {\n    message: string,\n}\n\n// get all users from firebase & show on profile page \nexport async function listAllUsers(userListDiv: HTMLDivElement) {\n\n    const response = await fetch(url + '.json');\n    const data = await response.json();\n    console.log(data);\n    const usersArray = Object.values(data);\n    const usersKeys = Object.keys(data);\n\n    getUsersList(usersArray)\n    function getUsersList(array) {\n        let i: number = 0;\n\n        array.forEach((list: firebaseUser) => {\n            const { username, avatar, } = list;\n\n            if (username != currentUser) {\n                const namn = document.createElement('h3');\n                namn.innerText = username;\n                const img = document.createElement('img');\n                img.src = avatar;\n                img.style.maxHeight = '100px';\n                const userCard = document.createElement('div');\n                userCard.append(namn, img)\n                userListDiv.append(userCard);\n                userCard.classList.add('user-card')\n\n                const usersId = usersKeys[i];\n\n                img.addEventListener('click', () => {\n                    localStorage.setItem('viewUser', username);\n                    localStorage.setItem('viewUserAvatar', avatar)\n                    localStorage.setItem('viewedUserId', usersId)\n                    setTimeout(() => {\n                        window.location.href = \"../html/userPage.html\"\n                    }, 100);\n                })\n            }\n\n            i++;\n        })\n\n    }\n}\n\n//delete user from firebase\nexport async function deleteUser(id, container: HTMLDivElement) {\n\n    const response = await fetch(url + `/${id}.json`, { method: 'DELETE' });\n    const data = await response.json();\n    console.log(data, \"user is removed\");\n\n    container.innerHTML = '';\n}\n\n// export async function getId(user) {\n\n//     const response = await fetch(url + '.json');\n//     const data = await response.json();\n//     console.log(data);\n\n//     const usersArray = Object.values(data);\n//     const keyArr = Object.keys(data);\n\n//     getUserId(usersArray)\n//     function getUserId(array) {\n//         let i = 0;\n\n//         array.forEach((list: firebaseUser) => {\n//             const { username } = list;\n\n//             if (username === user) {\n//                 const userId = keyArr[i];\n//                 console.log(userId);\n//                 localStorage.setItem('id', userId);\n\n//             }\n//             i++;\n//         })\n//     }\n// }\n\n//remove all posts from logged in user\nexport async function deletePosts(userId) {\n    const response = await fetch(url + `/${userId}/posts.json`, { method: 'DELETE' });\n    const data = await response.json();\n    console.log(data, \"posts are removed\");\n\n    location.reload();\n}","import { viewProfile } from \"./gui\";\nimport { listAllUsers } from \"./firebase\";\nimport { url } from \"./firebase\";\nimport { firebaseUser } from \"./firebase\";\nimport { deleteUser } from \"./firebase\";\nimport { deletePosts } from \"./firebase\";\nimport { showPosts } from \"./gui\";\n\ngetProfile();\nsetTimeout(() => {\n    getUsersPost();\n}, 300);\n\nconst currentAvatar = localStorage.getItem('avatar');\nconst currentUser = localStorage.getItem('user');\nconst avatar = document.querySelector('#user-avatar') as HTMLImageElement;\nconst userName = document.querySelector('#username-txt') as HTMLElement;\nviewProfile(currentAvatar, currentUser, avatar, userName);\n\nconst usersContainer = document.querySelector('#other-users-container') as HTMLDivElement;\nlistAllUsers(usersContainer);\n\n//delete user\nconst currentId = localStorage.getItem('id');\nconst container = document.querySelector('#profile-container') as HTMLDivElement;\nconst removeBtn = document.querySelector('#remove-btn') as HTMLButtonElement;\nremoveBtn.addEventListener('click', () => {\n    deleteUser(currentId, container);\n    setTimeout(() => {\n        window.location.href = \"../html.html\"\n        // location.assign('../html.html')\n    }, 300);\n})\n\n//delete all your posts\nconst deletePostsBtn = document.querySelector('#remove-posts') as HTMLButtonElement;\ndeletePostsBtn.addEventListener('click', () => {\n    deletePosts(currentId);\n})\n\n// publish a post \nconst publishBtn = document.querySelector('#publish-btn') as HTMLButtonElement;\nconst postInput = document.querySelector('#textarea') as HTMLInputElement;\npublishBtn.addEventListener('click', (event) => {\n    event.preventDefault();\n    const newPost = postInput.value;\n    console.log(newPost);\n    addPost(newPost);\n    setTimeout(() => {\n        getUsersPost()\n    }, 200);\n    postInput.value = '';\n})\n\n//get currentUsers posts from firebase & show on profile\nconst postCard = document.querySelector('#post-card') as HTMLDivElement;\nasync function getUsersPost() {\n\n    const response = await fetch(url + `/${currentId}/posts.json`);\n    const data = await response.json();\n\n    if (data != null) {\n        console.log(data);\n        const postArray = Object.values(data);\n\n        console.log(postArray)\n\n        showPosts(postArray, postCard);\n    } else {\n        postCard.innerText = \"No posts yet\"\n    }\n}\n\n//get currentId from firebase for logged in user \nasync function getProfile() {\n\n    const response = await fetch(url + '.json');\n    const data = await response.json();\n    console.log(data);\n\n    const usersArray = Object.values(data);\n    const keyArr = Object.keys(data);\n\n    getUserId(usersArray)\n    function getUserId(array) {\n        let i = 0;\n\n        array.forEach((list: firebaseUser) => {\n            const { username } = list;\n\n            if (username === currentUser) {\n                const userId = keyArr[i];\n                console.log(userId);\n                localStorage.setItem('id', userId);\n\n            }\n            i++;\n        })\n    }\n}\n\n//add new post to firebase \nasync function addPost(obj: Object) {\n    if (obj != '') {\n\n        const init = {\n            method: 'POST',\n            body: JSON.stringify(obj),\n            headers: {\n                'Content-type': \"application/json; charset=UTF-8\"\n            }\n        };\n\n        const response = await fetch(url + `/${currentId}/posts.json`, init);\n        const data = await response.json();\n        console.log(data);\n    }\n}","export async function viewProfile(avatar, user, img:HTMLImageElement, username:HTMLElement) {\n    img.src = avatar;\n    username.innerText = user;\n}\n\nexport function showPosts(arr, container:HTMLDivElement) {\n\n    container.innerHTML = '';\n\n    arr.forEach((element: String) => {\n        const postDiv = document.createElement('div');\n        postDiv.classList.add('post-card');\n        const postTxt = document.createElement('p');\n        postTxt.innerText = `${element}`;\n        postDiv.append(postTxt)\n        container.prepend(postDiv);\n    });\n\n}"],"names":["$14f6629ccf7de9b8$export$128fa18b7194ef","$14f6629ccf7de9b8$var$currentUser","localStorage","getItem","async","$14f6629ccf7de9b8$export$7d0f10f273c0438a","id","container","response","fetch","method","data","json","console","log","innerHTML","$14f6629ccf7de9b8$export$93623cb5800553b","userId","location","reload","usersArray","Object","values","keyArr","keys","array","i","forEach","list","username","$c5272c87d5623534$var$currentUser","setItem","getUserId","$c5272c87d5623534$var$getProfile","setTimeout","$c5272c87d5623534$var$getUsersPost","$c5272c87d5623534$var$currentAvatar","$c5272c87d5623534$var$avatar","document","querySelector","$c5272c87d5623534$var$userName","avatar","user","img","src","innerText","userListDiv","usersKeys","namn","createElement","style","maxHeight","userCard","append","classList","add","usersId","addEventListener","window","href","getUsersList","$c5272c87d5623534$var$currentId","$c5272c87d5623534$var$container","$c5272c87d5623534$var$publishBtn","$c5272c87d5623534$var$postInput","event","preventDefault","newPost","value","obj","init","body","JSON","stringify","headers","$c5272c87d5623534$var$addPost","$c5272c87d5623534$var$postCard","postArray","arr","element","postDiv","postTxt","prepend"],"version":3,"file":"profile.e4a98f52.js.map"}